server.port=80

# tcdn api 的请求域名，格式开头加上协议、末尾带着 /
translate.tcdn.api.domain=http://124.70.23.135:8070/

#数据库的名字，数据库名
database.name=translate_mirrorImage
##数据库所在ip地址，连接的ip，如 127.0.0.1
database.ip=192.168.31.242
##数据库连接的登陆账号
spring.datasource.username=root
##数据库连接的登陆密码
spring.datasource.password=1CuRMEqiRgaCfsr5@wM1

# Mysql 数据库配置
#spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Sqlite数据库配置，默认使用此数据库，无需任何准备及配置就可以直接运行起来
#spring.datasource.url=jdbc:sqlite::resource:wangmarket.db
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.jpa.database-platform=com.xnx3.j2ee.dialect.SQLiteDialect


#访问的后缀名,已废弃
url.suffix=.do
api.suffix=.json

# 连接池中的最大连接数
spring.datasource.hikari.maximum-pool-size=5

spring.mvc.view.prefix =/WEB-INF/view/
spring.mvc.view.suffix =.jsp  
application.hello =welcome use iw framework!


spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

#设置改动后不自动重启
spring.devtools.restart.enabled=false
#排除那个目录的文件不需要restart
spring.devtools.restart.exclude=static/**,public/**,site/**,cache/**,META-INF/resources/WEB-INF/view/**,wangmarket.db,head/**

#更新数据表  
spring.jpa.properties.hibernate.hbm2ddl.auto=update

#
# 日志 https://github.com/xnx3/log
#
# 缓存日志的最大条数。当达到这个条数后，将自动提交日志。默认为100
# 这里方便测试是否提交，直接设为3。正常情况下建议使用默认值即可，不用设置
log.cacheMaxNumber=3
# 缓存日志的最大时间，单位为秒。不设置默认是60。超过这个时间后，将会自动提交日志。即每隔多长时间就自动提交日志，然后重新开始累计即时
# 这里方便测试是否提交，直接设为1。正常情况下建议使用默认值即可，不用设置
log.cacheMaxTime=60
# 设置日志存储到哪个日志仓库中【此项必填】
# 这里以数据库为例解释，以便于理解。数据库有多个表，每个表都会存储不同的数据（结构）
# 这里便是每个表代表一个数据仓库。通过设置此，可切换将数据存入不同的数据仓库
# 例如 ：
#     elasticsearch ： 这里便是设置索引的名字，可以将不同的数据存入不同的索引中
#     阿里云SLS日志服务 ： 这里便是设置的日志库的名字，可将不同的数据存入不同的日志库中
#     华为云LTS日志服务 ： 这里便是设置的日志流的名字
log.tableName=useraction
#
# 当前使用的是哪种数据存储方式
# 如果此不设置，默认不做任何动作
# 下面便是具体针对自带默认的写出日志文件这种存储方式的配置了
# 保存日志的路径，格式如 /mnt/tomcat8/logs/ 、或者windows服务器的话路径如 C:\\Users\\Administrator\\Desktop\\log\\  注意最后的斜杠不能拉下。如果不设置此，则不开启，日志不会写出到日志文件，没任何动作。
log.datasource.file.path=G:\\git\\chrome\\log\\
#log.datasource.file.path=/mnt/tomcat8/logs/

# 文件上传 https://github.com/xnx3/FileUpload
#
# 设置允许上传的文件最大是多大，比如10MB 单位为 KB、MB ， 如果此项不设置，这里默认是3MB
fileupload.maxSize=10MB
# 设置允许上传的后缀名,传入格式如 png|jpg|gif|zip 多个用英文|分割。如果不设置，默认允许像是pdf、word、图片、音频、视频、zip等常用的且安全的文件后缀都可上传
fileupload.allowUploadSuffix=jpg|png|txt|zip
# 设置上传后文件所访问URL的域名，传入如： http://xxxx.com/  注意格式，后面以 / 结尾。非必填，可不设置。这里更多是用于像是CDN加速时，有专门的附件域名的场景使用
fileupload.domain=http://res.zvo.cn/
#
# 当前使用的是哪种存储方式。默认使用的是本地存储的方式。
# 上传文件保存到的路径，格式如 /mnt/tomcat8/fileupload/ 、或者windows服务器的话路径如 C:\\Users\\Administrator\\Desktop\\log\\  注意最后的斜杠不能拉下。如果不设置此，则不开启，上传文件则没任何动作。
#fileupload.storage.local.path=/mnt/tomcat8/fileupload/
fileupload.storage.local.path=G:\\git\\chrome\\fileupload\\